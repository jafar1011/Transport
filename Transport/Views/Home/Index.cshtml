@model Transport.Data.Tables.DriverPost
@using System.Security.Claims
@{
    ViewData["Title"] = "Home Page";
}




@section HeaderImage {
    <header class="hero-header mb-3 position-relative">
        <img src="~/image/home.jpg" class="img-fluid w-100" alt="Header Image">
        <div class="hero-text position-absolute top-50 start-50 translate-middle text-white text-center">
            <h1 class="fw-bold display-1">Transport</h1><br />
            <a href = "#alldriverposts" class="btn glass-card  border-white btn-success rounded-pill text-white col-6">Explore Now &#8594;   </a>
        </div>
    </header>
}

@if (User.IsInRole("Driver") && ViewBag.Verification == "Approved")
{
    <button class="btn btn-primary mb-3" id="btnAddPost">Add Post</button>
}
else if (User.IsInRole("Driver") && ViewBag.Verification == "Pending")
{
    <p class="text-warning">Your account is pending verification. You cannot add posts yet.</p>
}
else if (User.IsInRole("Driver") && ViewBag.Verification == "Rejected")
{
    <p class="text-danger">Your verification request was rejected or account is disabled. Please contact support.</p>
}

<div id="addPostFormContainer" style="display:none;">
    <form asp-action="AddPost" method="post">
        <input type="hidden" name="IdentityUserId" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />

        <div>
            <label class="text-white">Name</label>
            <input type="text" class="form-control" readonly value="@ViewBag.Driver?.Name" />
        </div>
        <div>
            <label class ="text-white">Phone</label>
            <input type="text" class="form-control" readonly value="@ViewBag.Driver?.Phone" />
        </div>
        <div>
            <label class ="text-white">Car Name</label>
            <input type="text" class="form-control" readonly value="@ViewBag.Driver?.Car?.Model" />
        </div>
        <div>
            <label class="text-white">Car Year</label>
            <input asp-for="CarYear" class="form-control" />
        </div>
        <div>
            <label class="text-white">Air Condition</label>
            <select asp-for="AirCondition" class="form-control">
                <option value="true">Yes</option>
                <option value="false">No</option>
            </select>
        </div>

        <div>
            <label class="text-white">Areas</label>
            <input type="text" id="areaInput" class="form-control" placeholder="Add area and press Enter" />
            <div id="areaTags" style="margin-top:5px;"></div>
        </div>
        <div>
            <label class="text-white">Notes</label>
            <input asp-for="Note" class="mb-3 form-control" />
        </div>

        <button type="submit" class="btn btn-success mb-3">Submit Post</button>
    </form>
</div>
@if (TempData["StatusMessage"] != null)
{
    <div class="alert alert-success">@TempData["StatusMessage"]</div>
}
<h3 id="alldriverposts" class="text-white mb-3">All Driver Posts</h3>
<div class="search-wrapper mb-3">
    <i class="fas fa-search search-icon"></i>
    <form method="get" class="search-form">
        <input type="text"   name="searchTerm" placeholder="Search by area..." value="@ViewData["searchTerm"]" />
        <button type="submit"><i class="fas fa-arrow-right"></i></button>
    </form>
</div>
<br />

<hr class="text-white my-4" />





@if (ViewBag.Posts != null && ViewBag.Posts.Count > 0)
{
    foreach (var post in ViewBag.Posts)
    {
        <div class="card mb-3 glass-card">
            <div class="card-body">
                <h5 class="card-title text-success">@post.Name - @post.CarName (@post.CarYear)</h5>
                <p class="card-text">Phone: @post.Phone</p>
                <p class="card-text">Air Condition: @(post.AirCondition ? "Yes" : "No")</p>
                @if (post.Areas != null && post.Areas.Count > 0)
                {
                    <p>
                        Areas:
                        @foreach (var area in post.Areas)
                        {
                            <span class="badge bg-secondary me-1">@area.AreaName</span>
                        }
                    </p>
                }
                @if(!User.IsInRole("Driver"))
                {
                <p class="text-center"><i class="fa-solid fa-star fa-lg mb-3" style="color: #FFD43B; "></i> @(post.Driver.Rating.ToString("0.0"))  </p>
                }
                <p class="card-text mb-3">Notes: @(string.IsNullOrEmpty(post.Note) ? "None" : post.Note)</p>
                
                <small class="text-muted">Posted on: @post.CreatedAt.ToLocalTime()</small>

                
                @if (User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier) == post.Driver.IdentityUserId || User.IsInRole("Admin"))
                {
                    <form asp-action="DeletePost" asp-controller="Home" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@post.PostId" />
                        <button type="submit" class="btn btn-danger btn-sm"
                                onclick="return confirm('Are you sure you want to delete this post?');">
                            Delete
                        </button>
                    </form>
                }
            </div>
        </div>
    }
}
else
{
    <p>No posts yet.</p>
}

@section Scripts {
    <script>
        document.getElementById("btnAddPost").addEventListener("click", function () {
            document.getElementById("addPostFormContainer").style.display = "block";
        });

        const areaInput = document.getElementById("areaInput");
        const areaTags = document.getElementById("areaTags");

        areaInput.addEventListener("keypress", function (e) {
            if (e.key === "Enter" && areaInput.value.trim() !== "") {
                e.preventDefault();
                const tag = document.createElement("span");
                tag.textContent = areaInput.value.trim();
                tag.classList.add("badge", "bg-primary", "me-1");
                areaTags.appendChild(tag);

               
                const hiddenInput = document.createElement("input");
                hiddenInput.type = "hidden";
                hiddenInput.name = "Areas";
                hiddenInput.value = areaInput.value.trim();
                areaTags.appendChild(hiddenInput);

                areaInput.value = "";
            }
        });

                const searchWrapper = document.querySelector(".search-wrapper");
        const searchForm = searchWrapper.querySelector(".search-form");
        const searchInput = searchForm.querySelector("input");
        const searchIcon = searchWrapper.querySelector(".search-icon");

       
        searchWrapper.addEventListener("mouseenter", () => {
            searchForm.classList.add("active");
        });

        searchWrapper.addEventListener("mouseleave", () => {
           
            if (!searchInput.matches(":focus") && searchInput.value.trim() === "") {
                searchForm.classList.remove("active");
            }
            else
            {
                 searchForm.classList.add("active");
            }
        });

        
        searchInput.addEventListener("focus", () => {
            searchForm.classList.add("active");
        });

        searchInput.addEventListener("blur", () => {
            if (searchInput.value.trim() === "") {
                searchForm.classList.remove("active");
            }
        });

       
        searchIcon.addEventListener("click", () => {
            searchForm.classList.toggle("active");
            if (searchForm.classList.contains("active")) searchInput.focus();
        });
    </script>
}
